import React, { useState } from 'react';
import './App.css';
import IntroPage from './IntroPage';

const App = () => {
  const [selectedOption, setSelectedOption] = useState('');
  const [rejectionReason, setRejectionReason] = useState('');
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [error, setError] = useState('');
  const [showMainPage, setShowMainPage] = useState(false);

  const handleOptionChange = (option) => {
    setSelectedOption(option);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!selectedOption) {
      setError('LÃ¼tfen bir seÃ§enek seÃ§in!');
      return;
    }
    
    if (selectedOption === '2' && !rejectionReason.trim()) {
      setError('LÃ¼tfen bir ret nedeni girin!');
      return;
    }
    
    setIsSubmitting(true);
    setError('');

    // SeÃ§enek deÄŸerlerini daha anlamlÄ± metinlere dÃ¶nÃ¼ÅŸtÃ¼rme
    let optionText = '';
    if (selectedOption === '1') optionText = 'Evet, Ã‡ok Ä°sterim! â˜•';
    else if (selectedOption === '2') optionText = 'HayÄ±r, TeÅŸekkÃ¼rler ğŸ˜”';
    else if (selectedOption === '3') optionText = 'Kesinlikle! ğŸ¥°';

    try {
      // Formspree'ye form gÃ¶nderimi
      const response = await fetch('https://formspree.io/f/xjkykrej', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          option: optionText,
          rejectionReason: rejectionReason || 'Belirtilmedi',
          date: new Date().toLocaleString('tr-TR')
        })
      });
      
      if (response.ok) {
        setIsSubmitted(true);
        setIsSubmitting(false);
      } else {
        throw new Error('Form gÃ¶nderimi baÅŸarÄ±sÄ±z');
      }
    } catch (error) {
      console.error('Form gÃ¶nderilirken hata oluÅŸtu:', error);
      setError('Form gÃ¶nderilirken bir hata oluÅŸtu. LÃ¼tfen tekrar deneyin.');
      setIsSubmitting(false);
    }
  };

  if (!showMainPage) {
    return <IntroPage onContinue={() => setShowMainPage(true)} />;
  }

  if (isSubmitted) {
    return (
      <div className="container success-container">
        <div className="success-icon">âœ“</div>
        <h1>TeÅŸekkÃ¼rler!</h1>
        <p>CevabÄ±nÄ±z baÅŸarÄ±yla iletildi.</p>
        
        {selectedOption === '1' || selectedOption === '3' ? (
          <strong>Beni nerede bulacaÄŸÄ±nÄ± Ã§ok iyi biliyorsun! En kÄ±sa sÃ¼rede gÃ¶rÃ¼ÅŸmek Ã¼zere.</strong>
        ) : (
          <p>Belki baÅŸka bir zaman buluÅŸabiliriz.</p>
        )}
        
        <button className="back-button" onClick={() => window.location.reload()}>
          Ana Sayfaya DÃ¶n
        </button>
      </div>
    );
  }

  return (
    <div className="container">
      <h1>Benimle Kahve Ä°Ã§meye Var mÄ±sÄ±n?</h1>
      
      <div className="disclaimer-box">
        <p className="disclaimer-text">
        <strong>Not:</strong> Bu davet sadece Ã–ZEL olduÄŸu dÃ¼ÅŸÃ¼nÃ¼len bir kiÅŸi iÃ§in bir defaya mahsus olmak Ã¼zere Ã¶zel olarak hazÄ±rlandÄ±. Evli veya iliÅŸkisi olmasÄ± durumunda bu davet yok sayÄ±lmalÄ±dÄ±r !
        </p>
      </div>
      
      <form id="contact-form" onSubmit={handleSubmit}>
        <div className="options">
          <div 
            className={`option ${selectedOption === '1' ? 'selected' : ''}`}
            onClick={() => handleOptionChange('1')}
          >
            <h2>Evet, Ã‡ok Ä°sterim! â˜•</h2>
            <p>Seninle kahve iÃ§mek harika olur!</p>
          </div>
          
          <div 
            className={`option ${selectedOption === '2' ? 'selected' : ''}`}
            onClick={() => handleOptionChange('2')}
          >
            <h2>HayÄ±r, TeÅŸekkÃ¼rler ğŸ˜”</h2>
            <p>Maalesef ÅŸu an uygun deÄŸilim.</p>
          </div>
          
          <div 
            className={`option ${selectedOption === '3' ? 'selected' : ''}`}
            onClick={() => handleOptionChange('3')}
          >
            <h2>Kesinlikle! ğŸ¥°</h2>
            <p>Kahve deÄŸil, akÅŸam yemeÄŸi bile olur!</p>
          </div>
        </div>
        
        {selectedOption === '2' && (
          <div className="rejection-reason">
            <label htmlFor="rejectionReason">Neden olmasÄ±n? (LÃ¼tfen belirtin)</label>
            <textarea
              id="rejectionReason"
              name="rejectionReason"
              value={rejectionReason}
              onChange={(e) => setRejectionReason(e.target.value)}
              placeholder="Nedenini paylaÅŸmak ister misin?"
              required
            />
          </div>
        )}
        
        {error && <div className="error">{error}</div>}
        
        <button 
          className="submit-button" 
          type="submit"
          disabled={isSubmitting || !selectedOption}
        >
          {isSubmitting ? 'GÃ¶nderiliyor...' : 'CevabÄ±mÄ± GÃ¶nder'}
        </button>
      </form>
    </div>
  );
};

export default App; 